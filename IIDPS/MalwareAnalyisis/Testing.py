
import sys
import pandas as pd
from sklearn.pipeline import Pipeline
import numpy as np
from sklearn.neighbors import KNeighborsClassifier
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics import classification_report, f1_score, accuracy_score, confusion_matrix, precision_score, recall_score, f1_score
import pickle



class Testing:

    def predict(modelfile,data):

        test_=data



        filename=modelfile
        train = pickle.load(open(filename, 'rb'))
        predicted_class = train.predict(test_["Calls"])
        print("Successfully Predicted", len(predicted_class))
        


        res = Testing.model_assessment(test_['Malware'], predicted_class)

        return res
    

    def model_assessment(y_test, predicted_class):
        # Accuracy = (TP + TN) / ALL
        accuracy = accuracy_score(y_test, predicted_class)


        return(accuracy)
    def selectdata():
        import pandas
        import random

        n = 820
        s = 200
        filename = "malware_analysis_data.csv"
        skip = sorted(random.sample(range(1,n),n-s))
        #print(len(skip))
        df = pandas.read_csv(filename, skiprows=skip, header=0)

        return df





if __name__ == "__main__":
    test_ = Testing.selectdata()
    l1=Testing.predict('nb_model.sav', test_)

    

    l2=Testing.predict('svm_model.sav', test_)



    l3=Testing.predict('rf_model.sav', test_)


    l=[l1,l2,l3]
    print(l)

    from Graph import view
    view(l)    
